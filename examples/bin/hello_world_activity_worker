#!/usr/bin/env ruby
require_relative '../init'
require_relative '../lib/crypt_payload_codec'

require 'temporal/forking_activity_worker'

Dir[File.expand_path('../workflows/*.rb', __dir__)].each { |f| require f }
Dir[File.expand_path('../activities/*.rb', __dir__)].each { |f| require f }
Dir[File.expand_path('../middleware/*.rb', __dir__)].each { |f| require f }

if !ENV['USE_ENCRYPTION'].nil?
  Temporal.configure do |config|
    config.task_queue = 'crypt'
    config.payload_codec = Temporal::Connection::Converter::Codec::Chain.new(
      payload_codecs: [
        Temporal::CryptPayloadCodec.new
      ]
    )
  end
end

if !ENV['USE_ERROR_SERIALIZATION_V2'].nil?
  Temporal.configure do |config|
    config.task_queue = 'error_serialization_v2'
    config.use_error_serialization_v2 = true
  end
end

Temporal.configure do |config|
  config.add_header_propagator(SamplePropagator)
end

worker = Temporal::ForkingActivityWorker.new

worker.register_activity(HelloWorldActivity)

worker.add_activity_middleware(LoggingMiddleware, 'EXAMPLE')
worker.add_activity_middleware(SamplePropagator)

worker.start
